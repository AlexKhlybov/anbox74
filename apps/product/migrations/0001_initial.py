# Generated by Django 4.1 on 2022-10-19 05:29

import apps.product.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлен"),
                ),
                ("city", models.CharField(max_length=32, verbose_name="Страна")),
            ],
            options={"verbose_name": "Страна", "verbose_name_plural": "Страны",},
        ),
        migrations.CreateModel(
            name="Manufacturer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлен"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="Включено"
                    ),
                ),
                ("name", models.CharField(max_length=32, verbose_name="Производитель")),
            ],
            options={
                "verbose_name": "Название производителя",
                "verbose_name_plural": "Производители",
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлен"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="Включено"
                    ),
                ),
                ("name", models.CharField(max_length=32, verbose_name="Название")),
            ],
            options={
                "verbose_name": "Категория товара",
                "verbose_name_plural": "Категории товаров",
            },
        ),
        migrations.CreateModel(
            name="Boiler",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлен"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="Включено"
                    ),
                ),
                ("article", models.CharField(max_length=256, verbose_name="Артикул")),
                (
                    "title",
                    models.CharField(max_length=256, verbose_name="Название товара"),
                ),
                (
                    "sub_title",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Подгазоловок",
                    ),
                ),
                (
                    "image",
                    models.FileField(
                        max_length=64,
                        upload_to=apps.product.models.upload_to_news,
                        verbose_name="Картинка",
                    ),
                ),
                (
                    "short_text",
                    models.CharField(max_length=255, verbose_name="Короткое описание"),
                ),
                (
                    "text",
                    models.TextField(
                        max_length=10000, verbose_name="Описание продукта"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=8, verbose_name="Цена"
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(default=0, verbose_name="Кол-во"),
                ),
                (
                    "sale",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Скидка, %",
                    ),
                ),
                (
                    "power",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Номинальная мощность, кВт",
                    ),
                ),
                (
                    "voltage",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Номинальное напряжение, В",
                    ),
                ),
                (
                    "step_power",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Ступень переключения, кВт",
                    ),
                ),
                (
                    "protect_class",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Класс защиты поражения током",
                    ),
                ),
                (
                    "temp_out",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Регулировка темп. на выходе, С",
                    ),
                ),
                (
                    "square",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Площадь отапливаемых помещений, м2",
                    ),
                ),
                (
                    "without_measure",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Габаритные размеры, мм (без патрубков)",
                    ),
                ),
                (
                    "with_measure",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Габаритные размеры, мм (c патрубков)",
                    ),
                ),
                (
                    "mass",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Масса, кг"
                    ),
                ),
                (
                    "heater_type",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Тип нагревателя",
                    ),
                ),
                (
                    "max_pressure",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Максимальное давление в системе, Bar",
                    ),
                ),
                (
                    "pipe",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Диаметр трубы, дюйм",
                    ),
                ),
                (
                    "coolant",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Теплоноситель",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="category",
                        to="product.productcategory",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.city",
                        verbose_name="Страна",
                    ),
                ),
                (
                    "manufacturer",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="manufacturer",
                        to="product.manufacturer",
                        verbose_name="Производитель",
                    ),
                ),
            ],
            options={"verbose_name": "Котел", "verbose_name_plural": "Котлы",},
        ),
    ]
